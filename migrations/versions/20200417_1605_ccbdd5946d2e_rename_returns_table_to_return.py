"""Rename returns table to return

Revision ID: ccbdd5946d2e
Revises: 2602c79a2ecb
Create Date: 2020-04-17 16:05:44.202774

"""
import sqlalchemy as sa
from alembic import context, op
from sqlalchemy.sql.schema import quoted_name  # noqa: F401


from app.db.models import get_schemas

revision = 'ccbdd5946d2e'
down_revision = '2602c79a2ecb'


def create_schemas():
    conn = op.get_bind()
    for schema_name in get_schemas():
        if not conn.dialect.has_schema(conn, schema_name):
            conn.execute(sa.schema.CreateSchema(schema_name))


def upgrade():
    create_schemas()
    schema_upgrades()
    if context.get_x_argument(as_dictionary=True).get('data', None):
        data_upgrades()


def downgrade():
    if context.get_x_argument(as_dictionary=True).get('data', None):
        data_downgrades()
    schema_downgrades()


def schema_upgrades():
    """schema upgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'return',
        sa.Column('elr_id', sa.Integer(), nullable=False),
        sa.Column('elr_version', sa.Integer(), nullable=False),
        sa.Column('status', sa.Text(), nullable=False),
        sa.Column('created_datetime', sa.Date(), nullable=False),
        sa.Column('status_control', sa.Text(), nullable=False),
        sa.Column('batch_id', sa.Integer(), nullable=False),
        sa.Column('licence_type', sa.Text(), nullable=False),
        sa.Column('el_id', sa.Integer(), nullable=False),
        sa.Column('ogl_id', sa.Integer(), nullable=True),
        sa.Column('return_period_date', sa.Date(), nullable=True),
        sa.Column('end_country_id', sa.Integer(), nullable=True),
        sa.Column('usage_count', sa.Integer(), nullable=True),
        sa.Column('end_user_type', sa.Text(), nullable=True),
        sa.Column('eco_comment', sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(['batch_id'], ['spire.batch.id'],),
        sa.PrimaryKeyConstraint('elr_id', 'elr_version'),
        schema=quoted_name('spire', quote=True),
    )
    op.drop_table('returns', schema=quoted_name('spire', quote=True))
    # ### end Alembic commands ###


def schema_downgrades():
    """schema downgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'returns',
        sa.Column('elr_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('elr_version', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('status', sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column('created_datetime', sa.DATE(), autoincrement=False, nullable=False),
        sa.Column('status_control', sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column('batch_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('licence_type', sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column('el_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('ogl_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('return_period_date', sa.DATE(), autoincrement=False, nullable=True),
        sa.Column('end_country_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('usage_count', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('end_user_type', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('eco_comment', sa.TEXT(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['batch_id'], ['spire.batch.id'], name='returns_batch_id_fkey'),
        sa.PrimaryKeyConstraint('elr_id', 'elr_version', name='returns_pkey'),
        schema=quoted_name('spire', quote=True),
    )
    op.drop_table('return', schema=quoted_name('spire', quote=True))
    # ### end Alembic commands ###


def data_upgrades():
    """Add any optional data upgrade migrations here!"""
    pass


def data_downgrades():
    """Add any optional data downgrade migrations here!"""
    pass
