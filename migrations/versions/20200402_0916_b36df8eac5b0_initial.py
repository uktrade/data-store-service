"""initial

Revision ID: b36df8eac5b0
Revises: None
Create Date: 2020-04-02 09:16:30.648890

"""
import sqlalchemy as sa
from alembic import context, op
from sqlalchemy.sql.schema import quoted_name  # noqa: F401


from app.db.models import get_schemas

revision = 'b36df8eac5b0'
down_revision = None


def create_schemas():
    conn = op.get_bind()
    for schema_name in get_schemas():
        if not conn.dialect.has_schema(conn, schema_name):
            conn.execute(sa.schema.CreateSchema(schema_name))


def upgrade():
    create_schemas()
    schema_upgrades()
    if context.get_x_argument(as_dictionary=True).get('data', None):
        data_upgrades()


def downgrade():
    if context.get_x_argument(as_dictionary=True).get('data', None):
        data_downgrades()
    schema_downgrades()


def schema_upgrades():
    """schema upgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'L1',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('data_source_row_id', sa.Integer(), nullable=True),
        sa.Column('cty_code', sa.Integer(), nullable=True),
        sa.Column('cty_name_english', sa.Text(), nullable=True),
        sa.Column('cty_fullname_english', sa.Text(), nullable=True),
        sa.Column('cty_abbreviation', sa.Text(), nullable=True),
        sa.Column('cty_comments', sa.Text(), nullable=True),
        sa.Column('iso2_digit_alpha', sa.Text(), nullable=True),
        sa.Column('iso3_digit_alpha', sa.Text(), nullable=True),
        sa.Column('start_valid_year', sa.Text(), nullable=True),
        sa.Column('end_valid_year', sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('data_source_row_id'),
        schema=quoted_name('comtrade.country_code_and_iso', quote=True),
    )
    op.create_table(
        'L1',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('data_source_row_id', sa.Integer(), nullable=True),
        sa.Column('country', sa.Text(), nullable=True),
        sa.Column('iso3', sa.Text(), nullable=True),
        sa.Column('year', sa.Integer(), nullable=True),
        sa.Column('tariff_code', sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('data_source_row_id'),
        schema=quoted_name('dit.eu_country_membership', quote=True),
    )
    op.create_table(
        'L1',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('data_source_row_id', sa.Integer(), nullable=True),
        sa.Column('postcode', sa.Text(), nullable=True),
        sa.Column('local_authority_district_code', sa.Text(), nullable=True),
        sa.Column('local_authority_district_name', sa.Text(), nullable=True),
        sa.Column('local_enterprise_partnership_lep1_code', sa.Text(), nullable=True),
        sa.Column('local_enterprise_partnership_lep1_name', sa.Text(), nullable=True),
        sa.Column('local_enterprise_partnership_lep2_code', sa.Text(), nullable=True),
        sa.Column('local_enterprise_partnership_lep2_name', sa.Text(), nullable=True),
        sa.Column('region_code', sa.Text(), nullable=True),
        sa.Column('region_name', sa.Text(), nullable=True),
        sa.Column('national_grid_ref_easting', sa.Text(), nullable=True),
        sa.Column('national_grid_ref_northing', sa.Text(), nullable=True),
        sa.Column('date_of_introduction', sa.Date(), nullable=True),
        sa.Column('date_of_termination', sa.Date(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('data_source_row_id'),
        schema=quoted_name('dit.reference_postcodes', quote=True),
    )
    op.create_table(
        'L1',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('data_source_row_id', sa.Integer(), nullable=True),
        sa.Column('pcd', sa.Text(), nullable=True),
        sa.Column('pcd2', sa.Text(), nullable=True),
        sa.Column('pcds', sa.Text(), nullable=True),
        sa.Column('dointr', sa.Date(), nullable=True),
        sa.Column('doterm', sa.Date(), nullable=True),
        sa.Column('oscty', sa.Text(), nullable=True),
        sa.Column('ced', sa.Text(), nullable=True),
        sa.Column('oslaua', sa.Text(), nullable=True),
        sa.Column('osward', sa.Text(), nullable=True),
        sa.Column('parish', sa.Text(), nullable=True),
        sa.Column('usertype', sa.Text(), nullable=True),
        sa.Column('oseast1m', sa.Text(), nullable=True),
        sa.Column('osnrth1m', sa.Text(), nullable=True),
        sa.Column('osgrdind', sa.Text(), nullable=True),
        sa.Column('oshlthau', sa.Text(), nullable=True),
        sa.Column('nhser', sa.Text(), nullable=True),
        sa.Column('ctry', sa.Text(), nullable=True),
        sa.Column('rgn', sa.Text(), nullable=True),
        sa.Column('streg', sa.Text(), nullable=True),
        sa.Column('pcon', sa.Text(), nullable=True),
        sa.Column('eer', sa.Text(), nullable=True),
        sa.Column('teclec', sa.Text(), nullable=True),
        sa.Column('ttwa', sa.Text(), nullable=True),
        sa.Column('pct', sa.Text(), nullable=True),
        sa.Column('nuts', sa.Text(), nullable=True),
        sa.Column('statsward', sa.Text(), nullable=True),
        sa.Column('oa01', sa.Text(), nullable=True),
        sa.Column('casward', sa.Text(), nullable=True),
        sa.Column('park', sa.Text(), nullable=True),
        sa.Column('lsoa01', sa.Text(), nullable=True),
        sa.Column('msoa01', sa.Text(), nullable=True),
        sa.Column('ur01ind', sa.Text(), nullable=True),
        sa.Column('oac01', sa.Text(), nullable=True),
        sa.Column('oa11', sa.Text(), nullable=True),
        sa.Column('lsoa11', sa.Text(), nullable=True),
        sa.Column('msoa11', sa.Text(), nullable=True),
        sa.Column('wz11', sa.Text(), nullable=True),
        sa.Column('ccg', sa.Text(), nullable=True),
        sa.Column('bua11', sa.Text(), nullable=True),
        sa.Column('buasd11', sa.Text(), nullable=True),
        sa.Column('ru11ind', sa.Text(), nullable=True),
        sa.Column('oac11', sa.Text(), nullable=True),
        sa.Column('lat', sa.Text(), nullable=True),
        sa.Column('long', sa.Text(), nullable=True),
        sa.Column('lep1', sa.Text(), nullable=True),
        sa.Column('lep2', sa.Text(), nullable=True),
        sa.Column('pfa', sa.Text(), nullable=True),
        sa.Column('imd', sa.Text(), nullable=True),
        sa.Column('calncv', sa.Text(), nullable=True),
        sa.Column('stp', sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('data_source_row_id'),
        schema=quoted_name('ons.postcode_directory', quote=True),
    )
    op.create_index(
        op.f('ix_ons_postcode_directory_L1_pcds'),
        'L1',
        ['pcds'],
        unique=False,
        schema=quoted_name('ons.postcode_directory', quote=True),
    )
    op.create_table(
        'datafile_registry',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('source', sa.Text(), nullable=False),
        sa.Column('file_name', sa.Text(), nullable=True),
        sa.Column(
            'state',
            sa.Enum(
                'processing',
                'failed',
                'processed',
                'ignored',
                name='processing_state',
                schema=quoted_name('operations', quote=True),
                inherit_schema=True,
            ),
            nullable=False,
        ),
        sa.Column('error_message', sa.Text(), nullable=True),
        sa.Column('created_timestamp', sa.DateTime(), nullable=False),
        sa.Column('updated_timestamp', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        schema=quoted_name('operations', quote=True),
    )
    op.create_table(
        'hawk_users',
        sa.Column('id', sa.Text(), nullable=False),
        sa.Column('key', sa.Text(), nullable=True),
        sa.Column('scope', sa.ARRAY(sa.Text()), nullable=True),
        sa.Column('description', sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        schema=quoted_name('public', quote=True),
    )
    op.create_table(
        'L0',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('datafile_created', sa.Text(), nullable=True),
        sa.Column('datafile_updated', sa.Text(), nullable=True),
        sa.Column('data_hash', sa.Text(), nullable=True),
        sa.Column('nomen_code', sa.Text(), nullable=True),
        sa.Column('reporter', sa.Integer(), nullable=True),
        sa.Column('product', sa.Integer(), nullable=True),
        sa.Column('bound_rate', sa.Numeric(), nullable=True),
        sa.Column('total_number_of_lines', sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('data_hash'),
        schema=quoted_name('world_bank.bound_rates', quote=True),
    )
    op.create_table(
        'L1',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('data_source_row_id', sa.Integer(), nullable=True),
        sa.Column('reporter', sa.Integer(), nullable=True),
        sa.Column('product', sa.Integer(), nullable=True),
        sa.Column('bound_rate', sa.Numeric(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('data_source_row_id'),
        schema=quoted_name('world_bank.bound_rates', quote=True),
    )
    op.create_table(
        'L0',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('datafile_created', sa.Text(), nullable=True),
        sa.Column('reporter', sa.Integer(), nullable=True),
        sa.Column('year', sa.Integer(), nullable=True),
        sa.Column('product', sa.Integer(), nullable=True),
        sa.Column('partner', sa.Integer(), nullable=True),
        sa.Column('duty_type', sa.Text(), nullable=True),
        sa.Column('simple_average', sa.Numeric(), nullable=True),
        sa.Column('number_of_total_lines', sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        schema=quoted_name('world_bank.tariff', quote=True),
    )
    op.create_table(
        'L1',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('data_source_row_id', sa.Integer(), nullable=True),
        sa.Column('product', sa.Integer(), nullable=True),
        sa.Column('reporter', sa.Integer(), nullable=True),
        sa.Column('partner', sa.Integer(), nullable=True),
        sa.Column('year', sa.Integer(), nullable=True),
        sa.Column('assumed_tariff', sa.Numeric(), nullable=True),
        sa.Column('app_rate', sa.Numeric(), nullable=True),
        sa.Column('mfn_rate', sa.Numeric(), nullable=True),
        sa.Column('bnd_rate', sa.Numeric(), nullable=True),
        sa.Column('country_average', sa.Numeric(), nullable=True),
        sa.Column('world_average', sa.Numeric(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('data_source_row_id'),
        schema=quoted_name('world_bank.tariff', quote=True),
    )
    # ### end Alembic commands ###


def schema_downgrades():
    """schema downgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('L1', schema=quoted_name('world_bank.tariff', quote=True))
    op.drop_table('L0', schema=quoted_name('world_bank.tariff', quote=True))
    op.drop_table('L1', schema=quoted_name('world_bank.bound_rates', quote=True))
    op.drop_table('L0', schema=quoted_name('world_bank.bound_rates', quote=True))
    op.drop_table('hawk_users', schema=quoted_name('public', quote=True))
    op.drop_table('datafile_registry', schema=quoted_name('operations', quote=True))
    op.drop_index(
        op.f('ix_ons_postcode_directory_L1_pcds'),
        table_name='L1',
        schema=quoted_name('ons.postcode_directory', quote=True),
    )
    op.drop_table('L1', schema=quoted_name('ons.postcode_directory', quote=True))
    op.drop_table('L1', schema=quoted_name('dit.reference_postcodes', quote=True))
    op.drop_table('L1', schema=quoted_name('dit.eu_country_membership', quote=True))
    op.drop_table('L1', schema=quoted_name('comtrade.country_code_and_iso', quote=True))
    # ### end Alembic commands ###


def data_upgrades():
    """Add any optional data upgrade migrations here!"""
    pass


def data_downgrades():
    """Add any optional data downgrade migrations here!"""
    pass
