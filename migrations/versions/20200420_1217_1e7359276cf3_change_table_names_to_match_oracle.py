"""Change table names to match Oracle

Revision ID: 1e7359276cf3
Revises: be326fe4f9e4
Create Date: 2020-04-20 12:17:56.274226

"""
import sqlalchemy as sa
from alembic import context, op
from sqlalchemy.dialects import postgresql
from sqlalchemy.sql.schema import quoted_name  # noqa: F401

from app.db.models import get_schemas

revision = '1e7359276cf3'
down_revision = 'be326fe4f9e4'


def create_schemas():
    conn = op.get_bind()
    for schema_name in get_schemas():
        if not conn.dialect.has_schema(conn, schema_name):
            conn.execute(sa.schema.CreateSchema(schema_name))


def upgrade():
    create_schemas()
    schema_upgrades()
    if context.get_x_argument(as_dictionary=True).get('data', None):
        data_upgrades()


def downgrade():
    if context.get_x_argument(as_dictionary=True).get('data', None):
        data_downgrades()
    schema_downgrades()


def schema_upgrades():
    """schema upgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'batches',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('batch_ref', sa.Text(), nullable=False),
        sa.Column('status', sa.Text(), nullable=False),
        sa.Column('start_date', sa.DateTime(), nullable=True),
        sa.Column('end_date', sa.DateTime(), nullable=True),
        sa.Column('approve_date', sa.DateTime(), nullable=False),
        sa.Column('release_date', sa.DateTime(), nullable=True),
        sa.Column('staging_date', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        schema=quoted_name('spire', quote=True),
    )
    op.create_table(
        'country_groups',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.PrimaryKeyConstraint('id'),
        schema=quoted_name('spire', quote=True),
    )
    op.create_table(
        'end_users',
        sa.Column('eu_id', sa.Integer(), nullable=False),
        sa.Column('version_number', sa.Integer(), nullable=False),
        sa.Column('ela_grp_id', sa.Integer(), nullable=True),
        sa.Column('end_user_type', sa.Text(), nullable=True),
        sa.Column('country_id', sa.Integer(), nullable=True),
        sa.Column('end_user_count', sa.Integer(), nullable=True),
        sa.Column('start_date', sa.DateTime(), nullable=True),
        sa.Column('status_control', sa.Text(), nullable=True),
        sa.Column('batch_id', sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint('eu_id', 'version_number'),
        schema=quoted_name('spire', quote=True),
    )
    op.create_table(
        'footnotes',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('text', sa.Text(), nullable=True),
        sa.Column('status', sa.Text(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        schema=quoted_name('spire', quote=True),
    )
    op.create_table(
        'media_footnote_countries',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('ela_grp_id', sa.Integer(), nullable=False),
        sa.Column('mf_grp_id', sa.Integer(), nullable=False),
        sa.Column('country_id', sa.Integer(), nullable=False),
        sa.Column('country_name', sa.Text(), nullable=False),
        sa.Column('status_control', sa.Text(), nullable=True),
        sa.Column('start_datetime', sa.DateTime(), nullable=False),
        sa.Column('end_datetime', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        schema=quoted_name('spire', quote=True),
    )
    op.create_table(
        'media_footnotes',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        schema=quoted_name('spire', quote=True),
    )
    op.create_table(
        'ogl_types',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('title', sa.Text(), nullable=False),
        sa.Column('start_datetime', sa.DateTime(), nullable=False),
        sa.Column('end_datetime', sa.DateTime(), nullable=True),
        sa.Column('display_order', sa.Integer(), nullable=True),
        sa.Column('f680_flag', sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        schema=quoted_name('spire', quote=True),
    )
    op.create_table(
        'ref_ars_subjects',
        sa.Column('ars_value', sa.Text(), nullable=False),
        sa.Column('ars_subject', sa.Text(), nullable=False),
        sa.PrimaryKeyConstraint('ars_value'),
        schema=quoted_name('spire', quote=True),
    )
    op.create_table(
        'ref_country_mappings',
        sa.Column('country_id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('country_name', sa.Text(), nullable=False),
        sa.PrimaryKeyConstraint('country_id'),
        schema=quoted_name('spire', quote=True),
    )
    op.create_table(
        'ref_do_not_report_values',
        sa.Column('dnr_type', sa.Text(), nullable=False),
        sa.Column('dnr_value', sa.Text(), nullable=False),
        sa.PrimaryKeyConstraint('dnr_type', 'dnr_value'),
        schema=quoted_name('spire', quote=True),
    )
    op.create_table(
        'applications',
        sa.Column('ela_grp_id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('case_type', sa.Text(), nullable=False),
        sa.Column('case_sub_type', sa.Text(), nullable=True),
        sa.Column('initial_processing_time', sa.Integer(), nullable=False),
        sa.Column('case_closed_date', sa.DateTime(), nullable=False),
        sa.Column('withheld_status', sa.Text(), nullable=True),
        sa.Column('batch_id', sa.Integer(), nullable=False),
        sa.Column('ela_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['batch_id'], ['spire.batches.id'],),
        sa.PrimaryKeyConstraint('ela_grp_id'),
        schema=quoted_name('spire', quote=True),
    )
    op.create_table(
        'country_group_entries',
        sa.Column('cg_id', sa.Integer(), nullable=False),
        sa.Column('country_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['cg_id'], ['spire.country_groups.id'],),
        sa.PrimaryKeyConstraint('cg_id', 'country_id'),
        schema=quoted_name('spire', quote=True),
    )
    op.create_table(
        'media_footnote_details',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('mf_id', sa.Integer(), nullable=False),
        sa.Column('status_control', sa.Text(), nullable=True),
        sa.Column('start_datetime', sa.DateTime(), nullable=False),
        sa.Column('end_datetime', sa.DateTime(), nullable=True),
        sa.Column('footnote_type', sa.Text(), nullable=False),
        sa.Column('display_text', sa.Text(), nullable=False),
        sa.Column('single_footnote_text', sa.Text(), nullable=False),
        sa.Column('joint_footnote_text', sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(['mf_id'], ['spire.media_footnotes.id'],),
        sa.PrimaryKeyConstraint('id'),
        schema=quoted_name('spire', quote=True),
    )
    op.create_table(
        'returns',
        sa.Column('elr_id', sa.Integer(), nullable=False),
        sa.Column('elr_version', sa.Integer(), nullable=False),
        sa.Column('status', sa.Text(), nullable=False),
        sa.Column('created_datetime', sa.DateTime(), nullable=False),
        sa.Column('status_control', sa.Text(), nullable=False),
        sa.Column('batch_id', sa.Integer(), nullable=False),
        sa.Column('licence_type', sa.Text(), nullable=False),
        sa.Column('el_id', sa.Integer(), nullable=False),
        sa.Column('ogl_id', sa.Integer(), nullable=True),
        sa.Column('return_period_date', sa.DateTime(), nullable=True),
        sa.Column('end_country_id', sa.Integer(), nullable=True),
        sa.Column('usage_count', sa.Integer(), nullable=True),
        sa.Column('end_user_type', sa.Text(), nullable=True),
        sa.Column('eco_comment', sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(['batch_id'], ['spire.batches.id'],),
        sa.PrimaryKeyConstraint('elr_id', 'elr_version'),
        schema=quoted_name('spire', quote=True),
    )
    op.create_table(
        'application_amendments',
        sa.Column('ela_grp_id', sa.Integer(), nullable=False),
        sa.Column('ela_id', sa.Integer(), nullable=False),
        sa.Column('case_type', sa.Text(), nullable=False),
        sa.Column('case_sub_type', sa.Text(), nullable=True),
        sa.Column('case_processing_time', sa.Integer(), nullable=False),
        sa.Column('amendment_closed_date', sa.DateTime(), nullable=False),
        sa.Column('withheld_status', sa.Text(), nullable=True),
        sa.Column('batch_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['ela_grp_id'], ['spire.applications.ela_grp_id'],),
        sa.PrimaryKeyConstraint('ela_grp_id', 'ela_id'),
        schema=quoted_name('spire', quote=True),
    )
    op.create_table(
        'application_countries',
        sa.Column('ela_grp_id', sa.Integer(), nullable=False),
        sa.Column('country_id', sa.Integer(), nullable=False),
        sa.Column('report_date', sa.DateTime(), nullable=False),
        sa.Column('start_date', sa.DateTime(), nullable=False),
        sa.Column('batch_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['batch_id'], ['spire.batches.id'],),
        sa.ForeignKeyConstraint(['ela_grp_id'], ['spire.applications.ela_grp_id'],),
        sa.PrimaryKeyConstraint('ela_grp_id', 'country_id'),
        schema=quoted_name('spire', quote=True),
    )
    op.create_table(
        'footnote_entries',
        sa.Column('fne_id', sa.Integer(), nullable=False),
        sa.Column('fn_id', sa.Integer(), nullable=True),
        sa.Column('ela_grp_id', sa.Integer(), nullable=False),
        sa.Column('goods_item_id', sa.Integer(), nullable=True),
        sa.Column('country_id', sa.Integer(), nullable=True),
        sa.Column('fnr_id', sa.Integer(), nullable=True),
        sa.Column('start_date', sa.DateTime(), nullable=False),
        sa.Column('version_no', sa.Integer(), nullable=False),
        sa.Column('batch_id', sa.Integer(), nullable=False),
        sa.Column('status_control', sa.Text(), nullable=False),
        sa.Column('mfd_id', sa.Integer(), nullable=True),
        sa.Column('mf_grp_id', sa.Integer(), nullable=True),
        sa.Column('mf_free_text', sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(['batch_id'], ['spire.batches.id'],),
        sa.ForeignKeyConstraint(['ela_grp_id'], ['spire.applications.ela_grp_id'],),
        sa.ForeignKeyConstraint(['fn_id'], ['spire.footnotes.id'],),
        sa.ForeignKeyConstraint(['mfd_id'], ['spire.media_footnote_details.id'],),
        sa.PrimaryKeyConstraint('fne_id', 'version_no'),
        schema=quoted_name('spire', quote=True),
    )
    op.create_table(
        'goods_incidents',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('inc_id', sa.Integer(), nullable=False),
        sa.Column('type', sa.Text(), nullable=False),
        sa.Column('goods_item_id', sa.Integer(), nullable=False),
        sa.Column('dest_country_id', sa.Integer(), nullable=False),
        sa.Column('source_country_grp_id', sa.Integer(), nullable=True),
        sa.Column('report_date', sa.DateTime(), nullable=False),
        sa.Column('ela_grp_id', sa.Integer(), nullable=False),
        sa.Column('start_date', sa.DateTime(), nullable=False),
        sa.Column('version_no', sa.Integer(), nullable=False),
        sa.Column('batch_id', sa.Integer(), nullable=False),
        sa.Column('status_control', sa.Text(), nullable=False),
        sa.ForeignKeyConstraint(['batch_id'], ['spire.batches.id'],),
        sa.ForeignKeyConstraint(['ela_grp_id'], ['spire.applications.ela_grp_id'],),
        sa.ForeignKeyConstraint(['source_country_grp_id'], ['spire.country_groups.id'],),
        sa.PrimaryKeyConstraint('id'),
        schema=quoted_name('spire', quote=True),
    )
    op.create_table(
        'incidents',
        sa.Column('inc_id', sa.Integer(), nullable=False),
        sa.Column('batch_id', sa.Integer(), nullable=False),
        sa.Column('status', sa.Text(), nullable=False),
        sa.Column('type', sa.Text(), nullable=False),
        sa.Column('case_type', sa.Text(), nullable=False),
        sa.Column('case_sub_type', sa.Text(), nullable=True),
        sa.Column('ela_grp_id', sa.Integer(), nullable=False),
        sa.Column('ela_id', sa.Integer(), nullable=True),
        sa.Column('licence_id', sa.Integer(), nullable=True),
        sa.Column('report_date', sa.DateTime(), nullable=False),
        sa.Column('temporary_licence_flag', sa.Integer(), nullable=False),
        sa.Column('licence_conversion_flag', sa.Integer(), nullable=False),
        sa.Column('incorporation_flag', sa.Integer(), nullable=False),
        sa.Column('mil_flag', sa.Integer(), nullable=False),
        sa.Column('other_flag', sa.Integer(), nullable=False),
        sa.Column('torture_flag', sa.Integer(), nullable=False),
        sa.Column('start_date', sa.DateTime(), nullable=False),
        sa.Column('version_no', sa.Integer(), nullable=False),
        sa.Column('ogl_id', sa.Integer(), nullable=True),
        sa.Column('status_control', sa.Text(), nullable=False),
        sa.Column('else_id', sa.Integer(), nullable=True),
        sa.Column('stakeholders_confirmed', sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(['batch_id'], ['spire.batches.id'],),
        sa.ForeignKeyConstraint(['ela_grp_id'], ['spire.applications.ela_grp_id'],),
        sa.PrimaryKeyConstraint('inc_id', 'version_no'),
        schema=quoted_name('spire', quote=True),
    )
    op.create_table(
        'third_parties',
        sa.Column('tp_id', sa.Integer(), nullable=False),
        sa.Column('ela_grp_id', sa.Integer(), nullable=False),
        sa.Column('sh_id', sa.Integer(), nullable=True),
        sa.Column('country_id', sa.Integer(), nullable=False),
        sa.Column('ultimate_end_user_flag', sa.Integer(), nullable=True),
        sa.Column('start_date', sa.DateTime(), nullable=False),
        sa.Column('version_no', sa.Integer(), nullable=False),
        sa.Column('batch_id', sa.Integer(), nullable=False),
        sa.Column('status_control', sa.Text(), nullable=False),
        sa.ForeignKeyConstraint(['batch_id'], ['spire.batches.id'],),
        sa.ForeignKeyConstraint(['ela_grp_id'], ['spire.applications.ela_grp_id'],),
        sa.PrimaryKeyConstraint('tp_id', 'version_no'),
        schema=quoted_name('spire', quote=True),
    )
    op.create_table(
        'ultimate_end_users',
        sa.Column('ueu_id', sa.Integer(), nullable=False),
        sa.Column('ela_grp_id', sa.Integer(), nullable=False),
        sa.Column('country_id', sa.Integer(), nullable=False),
        sa.Column('status_control', sa.Text(), nullable=False),
        sa.Column('start_date', sa.DateTime(), nullable=False),
        sa.Column('version_no', sa.Integer(), nullable=False),
        sa.Column('batch_id', sa.Integer(), nullable=False),
        sa.Column('sh_id', sa.Integer(), nullable=True),
        sa.Column('ultimate_end_user_flag', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['batch_id'], ['spire.batches.id'],),
        sa.ForeignKeyConstraint(['ela_grp_id'], ['spire.applications.ela_grp_id'],),
        sa.PrimaryKeyConstraint('ueu_id', 'version_no'),
        schema=quoted_name('spire', quote=True),
    )
    op.create_table(
        'control_entries',
        sa.Column('gi_id', sa.Integer(), nullable=False),
        sa.Column('rating', sa.Text(), nullable=False),
        sa.Column('value', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['gi_id'], ['spire.goods_incidents.id'],),
        sa.ForeignKeyConstraint(['rating'], ['spire.ref_report_ratings.rating'],),
        sa.PrimaryKeyConstraint('gi_id', 'rating'),
        schema=quoted_name('spire', quote=True),
    )
    op.create_table(
        'reasons_for_refusal',
        sa.Column('gi_id', sa.Integer(), nullable=False),
        sa.Column('reason_for_refusal', sa.Text(), nullable=False),
        sa.ForeignKeyConstraint(['gi_id'], ['spire.goods_incidents.id'],),
        sa.PrimaryKeyConstraint('gi_id', 'reason_for_refusal'),
        schema=quoted_name('spire', quote=True),
    )
    op.drop_constraint(
        'ars_gi_id_fkey', 'ars', schema=quoted_name('spire', quote=True), type_='foreignkey'
    )
    op.drop_table('reason_for_refusal', schema=quoted_name('spire', quote=True))
    op.drop_table('control_entry', schema=quoted_name('spire', quote=True))
    op.drop_table('ultimate_end_user', schema=quoted_name('spire', quote=True))
    op.drop_table('third_party', schema=quoted_name('spire', quote=True))
    op.drop_table('incident', schema=quoted_name('spire', quote=True))
    op.drop_table('goods_incident', schema=quoted_name('spire', quote=True))
    op.drop_table('footnote_entry', schema=quoted_name('spire', quote=True))
    op.drop_table('application_country', schema=quoted_name('spire', quote=True))
    op.drop_table('application_amendment', schema=quoted_name('spire', quote=True))
    op.drop_table('return', schema=quoted_name('spire', quote=True))
    op.drop_table('media_footnote_detail', schema=quoted_name('spire', quote=True))
    op.drop_table('country_group_entry', schema=quoted_name('spire', quote=True))
    op.drop_table('application', schema=quoted_name('spire', quote=True))
    op.drop_table('ref_do_not_report_value', schema=quoted_name('spire', quote=True))
    op.drop_table('ref_country_mapping', schema=quoted_name('spire', quote=True))
    op.drop_table('ref_ars_subject', schema=quoted_name('spire', quote=True))
    op.drop_table('ogl_type', schema=quoted_name('spire', quote=True))
    op.drop_table('media_footnote_country', schema=quoted_name('spire', quote=True))
    op.drop_table('media_footnote', schema=quoted_name('spire', quote=True))
    op.drop_table('footnote', schema=quoted_name('spire', quote=True))
    op.drop_table('end_user', schema=quoted_name('spire', quote=True))
    op.drop_table('country_group', schema=quoted_name('spire', quote=True))
    op.drop_table('batch', schema=quoted_name('spire', quote=True))

    op.create_foreign_key(
        'ars_gi_id_fkey',
        'ars',
        'goods_incidents',
        ['gi_id'],
        ['id'],
        source_schema=quoted_name('spire', quote=True),
        referent_schema=quoted_name('spire', quote=True),
    )
    # ### end Alembic commands ###


def schema_downgrades():
    """schema downgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        'ars_gi_id_fkey', 'ars', schema=quoted_name('spire', quote=True), type_='foreignkey'
    )

    op.create_table(
        'batch',
        sa.Column(
            'id',
            sa.INTEGER(),
            server_default=sa.text("nextval('spire.batch_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column('batch_ref', sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column('status', sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column('start_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column('end_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column('approve_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column('release_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column('staging_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint('id', name='batch_pkey'),
        schema=quoted_name('spire', quote=True),
        postgresql_ignore_search_path=False,
    )

    op.create_table(
        'country_group',
        sa.Column(
            'id',
            sa.INTEGER(),
            server_default=sa.text("nextval('spire.country_group_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint('id', name='country_group_pkey'),
        schema=quoted_name('spire', quote=True),
        postgresql_ignore_search_path=False,
    )

    op.create_table(
        'end_user',
        sa.Column('eu_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('version_number', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('ela_grp_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('end_user_type', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('country_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('end_user_count', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('start_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column('status_control', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('batch_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint('eu_id', 'version_number', name='end_user_pkey'),
        schema=quoted_name('spire', quote=True),
    )

    op.create_table(
        'footnote',
        sa.Column(
            'id',
            sa.INTEGER(),
            server_default=sa.text("nextval('spire.footnote_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column('text', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('status', sa.TEXT(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint('id', name='footnote_pkey'),
        schema=quoted_name('spire', quote=True),
    )

    op.create_table(
        'media_footnote',
        sa.Column(
            'id',
            sa.INTEGER(),
            server_default=sa.text("nextval('spire.media_footnote_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint('id', name='media_footnote_pkey'),
        schema=quoted_name('spire', quote=True),
        postgresql_ignore_search_path=False,
    )

    op.create_table(
        'media_footnote_country',
        sa.Column(
            'id',
            sa.INTEGER(),
            server_default=sa.text("nextval('spire.media_footnote_country_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column('ela_grp_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('mf_grp_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('country_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('country_name', sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column('status_control', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('start_datetime', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column('end_datetime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint('id', name='media_footnote_country_pkey'),
        schema=quoted_name('spire', quote=True),
    )

    op.create_table(
        'ogl_type',
        sa.Column(
            'id',
            sa.INTEGER(),
            server_default=sa.text("nextval('spire.ogl_type_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column('title', sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column('start_datetime', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column('end_datetime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column('display_order', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('f680_flag', sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint('id', name='ogl_type_pkey'),
        schema=quoted_name('spire', quote=True),
    )

    op.create_table(
        'ref_ars_subject',
        sa.Column('ars_value', sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column('ars_subject', sa.TEXT(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint('ars_value', name='ref_ars_subject_pkey'),
        schema=quoted_name('spire', quote=True),
    )

    op.create_table(
        'ref_country_mapping',
        sa.Column(
            'country_id',
            sa.INTEGER(),
            server_default=sa.text("nextval('spire.ref_country_mapping_country_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column('country_name', sa.TEXT(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint('country_id', name='ref_country_mapping_pkey'),
        schema=quoted_name('spire', quote=True),
    )

    op.create_table(
        'ref_do_not_report_value',
        sa.Column('dnr_type', sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column('dnr_value', sa.TEXT(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint('dnr_type', 'dnr_value', name='ref_do_not_report_value_pkey'),
        schema=quoted_name('spire', quote=True),
    )

    op.create_table(
        'application',
        sa.Column(
            'ela_grp_id',
            sa.INTEGER(),
            server_default=sa.text("nextval('spire.application_ela_grp_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column('case_type', sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column('case_sub_type', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('initial_processing_time', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('case_closed_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column('withheld_status', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('batch_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('ela_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['batch_id'], ['spire.batch.id'], name='application_batch_id_fkey'),
        sa.PrimaryKeyConstraint('ela_grp_id', name='application_pkey'),
        schema=quoted_name('spire', quote=True),
        postgresql_ignore_search_path=False,
    )

    op.create_table(
        'country_group_entry',
        sa.Column('cg_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('country_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ['cg_id'], ['spire.country_group.id'], name='country_group_entry_cg_id_fkey'
        ),
        sa.PrimaryKeyConstraint('cg_id', 'country_id', name='country_group_entry_pkey'),
        schema=quoted_name('spire', quote=True),
    )

    op.create_table(
        'media_footnote_detail',
        sa.Column(
            'id',
            sa.INTEGER(),
            server_default=sa.text("nextval('spire.media_footnote_detail_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column('mf_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('status_control', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('start_datetime', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column('end_datetime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column('footnote_type', sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column('display_text', sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column('single_footnote_text', sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column('joint_footnote_text', sa.TEXT(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ['mf_id'], ['spire.media_footnote.id'], name='media_footnote_detail_mf_id_fkey'
        ),
        sa.PrimaryKeyConstraint('id', name='media_footnote_detail_pkey'),
        schema=quoted_name('spire', quote=True),
        postgresql_ignore_search_path=False,
    )

    op.create_table(
        'return',
        sa.Column('elr_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('elr_version', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('status', sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column('created_datetime', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column('status_control', sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column('batch_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('licence_type', sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column('el_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('ogl_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('return_period_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column('end_country_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('usage_count', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('end_user_type', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('eco_comment', sa.TEXT(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['batch_id'], ['spire.batch.id'], name='return_batch_id_fkey'),
        sa.PrimaryKeyConstraint('elr_id', 'elr_version', name='return_pkey'),
        schema=quoted_name('spire', quote=True),
    )

    op.create_table(
        'application_amendment',
        sa.Column('ela_grp_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('ela_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('case_type', sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column('case_sub_type', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('case_processing_time', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            'amendment_closed_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.Column('withheld_status', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('batch_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ['ela_grp_id'],
            ['spire.application.ela_grp_id'],
            name='application_amendment_ela_grp_id_fkey',
        ),
        sa.PrimaryKeyConstraint('ela_grp_id', 'ela_id', name='application_amendment_pkey'),
        schema=quoted_name('spire', quote=True),
    )

    op.create_table(
        'application_country',
        sa.Column('ela_grp_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('country_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('report_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column('start_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column('batch_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ['batch_id'], ['spire.batch.id'], name='application_country_batch_id_fkey'
        ),
        sa.ForeignKeyConstraint(
            ['ela_grp_id'],
            ['spire.application.ela_grp_id'],
            name='application_country_ela_grp_id_fkey',
        ),
        sa.PrimaryKeyConstraint('ela_grp_id', 'country_id', name='application_country_pkey'),
        schema=quoted_name('spire', quote=True),
    )

    op.create_table(
        'footnote_entry',
        sa.Column('fne_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('fn_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('ela_grp_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('goods_item_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('country_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('fnr_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('start_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column('version_no', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('batch_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('status_control', sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column('mfd_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('mf_grp_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('mf_free_text', sa.TEXT(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ['batch_id'], ['spire.batch.id'], name='footnote_entry_batch_id_fkey'
        ),
        sa.ForeignKeyConstraint(
            ['ela_grp_id'], ['spire.application.ela_grp_id'], name='footnote_entry_ela_grp_id_fkey'
        ),
        sa.ForeignKeyConstraint(['fn_id'], ['spire.footnote.id'], name='footnote_entry_fn_id_fkey'),
        sa.ForeignKeyConstraint(
            ['mfd_id'], ['spire.media_footnote_detail.id'], name='footnote_entry_mfd_id_fkey'
        ),
        sa.PrimaryKeyConstraint('fne_id', 'version_no', name='footnote_entry_pkey'),
        schema=quoted_name('spire', quote=True),
    )

    op.create_table(
        'goods_incident',
        sa.Column(
            'id',
            sa.INTEGER(),
            server_default=sa.text("nextval('spire.goods_incident_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column('inc_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('type', sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column('goods_item_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('dest_country_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('source_country_grp_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('report_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column('ela_grp_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('start_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column('version_no', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('batch_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('status_control', sa.TEXT(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ['batch_id'], ['spire.batch.id'], name='goods_incident_batch_id_fkey'
        ),
        sa.ForeignKeyConstraint(
            ['ela_grp_id'], ['spire.application.ela_grp_id'], name='goods_incident_ela_grp_id_fkey'
        ),
        sa.ForeignKeyConstraint(
            ['source_country_grp_id'],
            ['spire.country_group.id'],
            name='goods_incident_source_country_grp_id_fkey',
        ),
        sa.PrimaryKeyConstraint('id', name='goods_incident_pkey'),
        schema=quoted_name('spire', quote=True),
    )

    op.create_table(
        'incident',
        sa.Column('inc_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('batch_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('status', sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column('type', sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column('case_type', sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column('case_sub_type', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('ela_grp_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('ela_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('licence_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('report_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column('temporary_licence_flag', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('licence_conversion_flag', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('incorporation_flag', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('mil_flag', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('other_flag', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('torture_flag', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('start_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column('version_no', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('ogl_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('status_control', sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column('else_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('stakeholders_confirmed', sa.TEXT(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['batch_id'], ['spire.batch.id'], name='incident_batch_id_fkey'),
        sa.ForeignKeyConstraint(
            ['ela_grp_id'], ['spire.application.ela_grp_id'], name='incident_ela_grp_id_fkey'
        ),
        sa.PrimaryKeyConstraint('inc_id', 'version_no', name='incident_pkey'),
        schema=quoted_name('spire', quote=True),
    )

    op.create_table(
        'third_party',
        sa.Column('tp_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('ela_grp_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('sh_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('country_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('ultimate_end_user_flag', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('start_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column('version_no', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('batch_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('status_control', sa.TEXT(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(['batch_id'], ['spire.batch.id'], name='third_party_batch_id_fkey'),
        sa.ForeignKeyConstraint(
            ['ela_grp_id'], ['spire.application.ela_grp_id'], name='third_party_ela_grp_id_fkey'
        ),
        sa.PrimaryKeyConstraint('tp_id', 'version_no', name='third_party_pkey'),
        schema=quoted_name('spire', quote=True),
    )

    op.create_table(
        'ultimate_end_user',
        sa.Column('ueu_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('ela_grp_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('country_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('status_control', sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column('start_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column('version_no', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('batch_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('sh_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('ultimate_end_user_flag', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ['batch_id'], ['spire.batch.id'], name='ultimate_end_user_batch_id_fkey'
        ),
        sa.ForeignKeyConstraint(
            ['ela_grp_id'],
            ['spire.application.ela_grp_id'],
            name='ultimate_end_user_ela_grp_id_fkey',
        ),
        sa.PrimaryKeyConstraint('ueu_id', 'version_no', name='ultimate_end_user_pkey'),
        schema=quoted_name('spire', quote=True),
    )

    op.create_table(
        'control_entry',
        sa.Column('gi_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('rating', sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column('value', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ['gi_id'], ['spire.goods_incident.id'], name='control_entry_gi_id_fkey'
        ),
        sa.ForeignKeyConstraint(
            ['rating'], ['spire.ref_report_ratings.rating'], name='control_entry_rating_fkey'
        ),
        sa.PrimaryKeyConstraint('gi_id', 'rating', name='control_entry_pkey'),
        schema=quoted_name('spire', quote=True),
    )

    op.create_table(
        'reason_for_refusal',
        sa.Column('gi_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('reason_for_refusal', sa.TEXT(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ['gi_id'], ['spire.goods_incident.id'], name='reason_for_refusal_gi_id_fkey'
        ),
        sa.PrimaryKeyConstraint('gi_id', 'reason_for_refusal', name='reason_for_refusal_pkey'),
        schema=quoted_name('spire', quote=True),
    )

    op.create_foreign_key(
        'ars_gi_id_fkey',
        'ars',
        'goods_incident',
        ['gi_id'],
        ['id'],
        source_schema=quoted_name('spire', quote=True),
        referent_schema=quoted_name('spire', quote=True),
    )

    op.drop_table('reasons_for_refusal', schema=quoted_name('spire', quote=True))
    op.drop_table('control_entries', schema=quoted_name('spire', quote=True))
    op.drop_table('ultimate_end_users', schema=quoted_name('spire', quote=True))
    op.drop_table('third_parties', schema=quoted_name('spire', quote=True))
    op.drop_table('incidents', schema=quoted_name('spire', quote=True))
    op.drop_table('goods_incidents', schema=quoted_name('spire', quote=True))
    op.drop_table('footnote_entries', schema=quoted_name('spire', quote=True))
    op.drop_table('application_countries', schema=quoted_name('spire', quote=True))
    op.drop_table('application_amendments', schema=quoted_name('spire', quote=True))
    op.drop_table('returns', schema=quoted_name('spire', quote=True))
    op.drop_table('media_footnote_details', schema=quoted_name('spire', quote=True))
    op.drop_table('country_group_entries', schema=quoted_name('spire', quote=True))
    op.drop_table('applications', schema=quoted_name('spire', quote=True))
    op.drop_table('ref_do_not_report_values', schema=quoted_name('spire', quote=True))
    op.drop_table('ref_country_mappings', schema=quoted_name('spire', quote=True))
    op.drop_table('ref_ars_subjects', schema=quoted_name('spire', quote=True))
    op.drop_table('ogl_types', schema=quoted_name('spire', quote=True))
    op.drop_table('media_footnotes', schema=quoted_name('spire', quote=True))
    op.drop_table('media_footnote_countries', schema=quoted_name('spire', quote=True))
    op.drop_table('footnotes', schema=quoted_name('spire', quote=True))
    op.drop_table('end_users', schema=quoted_name('spire', quote=True))
    op.drop_table('country_groups', schema=quoted_name('spire', quote=True))
    op.drop_table('batches', schema=quoted_name('spire', quote=True))
    # ### end Alembic commands ###


def data_upgrades():
    """Add any optional data upgrade migrations here!"""
    pass


def data_downgrades():
    """Add any optional data downgrade migrations here!"""
    pass
