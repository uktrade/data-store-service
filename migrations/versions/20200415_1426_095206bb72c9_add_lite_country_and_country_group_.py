"""Add LITE country and country group tables

Revision ID: 095206bb72c9
Revises: 49e6f321ee08
Create Date: 2020-04-15 14:26:27.850546

"""
import sqlalchemy as sa
from alembic import context, op
from sqlalchemy.sql.schema import quoted_name  # noqa: F401


from app.db.models import get_schemas

revision = '095206bb72c9'
down_revision = '49e6f321ee08'


def create_schemas():
    conn = op.get_bind()
    for schema_name in get_schemas():
        if not conn.dialect.has_schema(conn, schema_name):
            conn.execute(sa.schema.CreateSchema(schema_name))


def upgrade():
    create_schemas()
    schema_upgrades()
    if context.get_x_argument(as_dictionary=True).get('data', None):
        data_upgrades()


def downgrade():
    if context.get_x_argument(as_dictionary=True).get('data', None):
        data_downgrades()
    schema_downgrades()


def schema_upgrades():
    """schema upgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'country_group',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'ref_country_mapping',
        sa.Column('country_id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('country_name', sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint('country_id'),
    )
    op.create_table(
        'country_group_entry',
        sa.Column('cg_id', sa.Integer(), nullable=True),
        sa.Column('country_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['cg_id'], ['country_group.id'],),
        sa.ForeignKeyConstraint(['country_id'], ['ref_country_mapping.country_id'],),
    )
    # ### end Alembic commands ###


def schema_downgrades():
    """schema downgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('country_group_entry')
    op.drop_table('ref_country_mapping')
    op.drop_table('country_group')
    # ### end Alembic commands ###


def data_upgrades():
    """Add any optional data upgrade migrations here!"""
    pass


def data_downgrades():
    """Add any optional data downgrade migrations here!"""
    pass
