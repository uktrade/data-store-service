"""updated Pipeline model

Revision ID: dfdba022eb89
Revises: e5f27a1a8f53
Create Date: 2020-05-20 11:51:38.877228

"""
import sqlalchemy as sa
from alembic import context, op
from sqlalchemy.sql.schema import quoted_name  # noqa: F401


from app.db.models import get_schemas

revision = 'dfdba022eb89'
down_revision = 'e5f27a1a8f53'


def create_schemas():
    conn = op.get_bind()
    for schema_name in get_schemas():
        if not conn.dialect.has_schema(conn, schema_name):
            conn.execute(sa.schema.CreateSchema(schema_name))


def upgrade():
    create_schemas()
    schema_upgrades()
    if context.get_x_argument(as_dictionary=True).get('data', None):
        data_upgrades()


def downgrade():
    if context.get_x_argument(as_dictionary=True).get('data', None):
        data_downgrades()
    schema_downgrades()


def schema_upgrades():
    """schema upgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('pipeline', sa.Column('column_types', sa.ARRAY(sa.Text()), nullable=False))
    op.add_column('pipeline', sa.Column('delimiter', sa.Text(), server_default=',', nullable=False))
    op.add_column('pipeline', sa.Column('quote', sa.Text(), server_default='"', nullable=True))
    # ### end Alembic commands ###


def schema_downgrades():
    """schema downgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('pipeline', 'quote')
    op.drop_column('pipeline', 'delimiter')
    op.drop_column('pipeline', 'column_types')
    # ### end Alembic commands ###


def data_upgrades():
    """Add any optional data upgrade migrations here!"""
    pass


def data_downgrades():
    """Add any optional data downgrade migrations here!"""
    pass
