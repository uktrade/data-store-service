"""move columns from pipeline to datafile

Revision ID: 975408e1a227
Revises: 6635c9ad9599
Create Date: 2020-08-12 16:09:57.018189

"""
import sqlalchemy as sa
from alembic import context, op
from sqlalchemy.dialects import postgresql
from sqlalchemy.sql.schema import quoted_name  # noqa: F401

from app.db.models import get_schemas

revision = '975408e1a227'
down_revision = '6635c9ad9599'


def create_schemas():
    conn = op.get_bind()
    for schema_name in get_schemas():
        if not conn.dialect.has_schema(conn, schema_name):
            conn.execute(sa.schema.CreateSchema(schema_name))


def upgrade():
    create_schemas()
    schema_upgrades()
    if context.get_x_argument(as_dictionary=True).get('data', None):
        data_upgrades()


def downgrade():
    if context.get_x_argument(as_dictionary=True).get('data', None):
        data_downgrades()
    schema_downgrades()


def schema_upgrades():
    """schema upgrade migrations go here."""
    op.add_column(
        'pipeline_data_file', sa.Column('column_types', sa.ARRAY(sa.Text()), nullable=True)
    )
    op.add_column(
        'pipeline_data_file', sa.Column('delimiter', sa.Text(), server_default=',', nullable=False)
    )
    op.add_column(
        'pipeline_data_file', sa.Column('quote', sa.Text(), server_default='"', nullable=True)
    )

    # Data migration:
    connection = op.get_bind()
    connection.execute(
        """
        UPDATE pipeline_data_file
        SET
            column_types = subquery.column_types,
            delimiter = subquery.delimiter,
            quote = subquery.quote
        FROM
        (
            SELECT
                id,
                column_types,
                delimiter,
                quote
            FROM pipeline
        ) AS subquery
        WHERE pipeline_data_file.pipeline_id = subquery.id
    """
    )

    # drop columns
    op.drop_column('pipeline', 'delimiter')
    op.drop_column('pipeline', 'quote')
    op.drop_column('pipeline', 'column_types')


def schema_downgrades():
    """schema downgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('pipeline_data_file', 'quote')
    op.drop_column('pipeline_data_file', 'delimiter')
    op.drop_column('pipeline_data_file', 'column_types')
    op.add_column(
        'pipeline',
        sa.Column('column_types', postgresql.ARRAY(sa.TEXT()), autoincrement=False, nullable=True),
    )
    op.add_column(
        'pipeline',
        sa.Column(
            'quote',
            sa.TEXT(),
            server_default=sa.text('\'"\'::text'),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        'pipeline',
        sa.Column(
            'delimiter',
            sa.TEXT(),
            server_default=sa.text("','::text"),
            autoincrement=False,
            nullable=False,
        ),
    )
    # ### end Alembic commands ###


def data_upgrades():
    """Add any optional data upgrade migrations here!"""
    pass


def data_downgrades():
    """Add any optional data downgrade migrations here!"""
    pass
