"""remove_deleted_add_latest_version

Revision ID: 08657e1ac22b
Revises: 5a16f90b04a3
Create Date: 2020-07-08 16:41:22.882791

"""
import sqlalchemy as sa
from alembic import context, op
from sqlalchemy.sql.schema import quoted_name  # noqa: F401


from app.db.models import get_schemas

revision = '08657e1ac22b'
down_revision = '5a16f90b04a3'


def create_schemas():
    conn = op.get_bind()
    for schema_name in get_schemas():
        if not conn.dialect.has_schema(conn, schema_name):
            conn.execute(sa.schema.CreateSchema(schema_name))


def upgrade():
    create_schemas()
    schema_upgrades()
    if context.get_x_argument(as_dictionary=True).get('data', None):
        data_upgrades()


def downgrade():
    if context.get_x_argument(as_dictionary=True).get('data', None):
        data_downgrades()
    schema_downgrades()


def schema_upgrades():
    """schema upgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('pipeline_data_file', sa.Column('latest_version', sa.Boolean(), nullable=True))
    op.drop_column('pipeline_data_file', 'deleted')
    # ### end Alembic commands ###


def schema_downgrades():
    """schema downgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        'pipeline_data_file', sa.Column('deleted', sa.BOOLEAN(), autoincrement=False, nullable=True)
    )
    op.drop_column('pipeline_data_file', 'latest_version')
    # ### end Alembic commands ###


def data_upgrades():
    """Add any optional data upgrade migrations here!"""
    pass


def data_downgrades():
    """Add any optional data downgrade migrations here!"""
    pass
