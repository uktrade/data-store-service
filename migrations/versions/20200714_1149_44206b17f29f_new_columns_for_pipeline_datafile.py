"""new columns for pipeline datafile

Revision ID: 44206b17f29f
Revises: 5a16f90b04a3
Create Date: 2020-07-14 11:49:43.282010

"""
import sqlalchemy as sa
from alembic import context, op

from app.db.models import get_schemas

revision = '44206b17f29f'
down_revision = '5a16f90b04a3'


def create_schemas():
    conn = op.get_bind()
    for schema_name in get_schemas():
        if not conn.dialect.has_schema(conn, schema_name):
            conn.execute(sa.schema.CreateSchema(schema_name))


def upgrade():
    create_schemas()
    schema_upgrades()
    if context.get_x_argument(as_dictionary=True).get('data', None):
        data_upgrades()


def downgrade():
    if context.get_x_argument(as_dictionary=True).get('data', None):
        data_downgrades()
    schema_downgrades()


def schema_upgrades():
    """schema upgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('pipeline_data_file', sa.Column('error_message', sa.Text(), nullable=True))
    op.add_column('pipeline_data_file', sa.Column('state', sa.Text(), nullable=True))
    # ### end Alembic commands ###


def schema_downgrades():
    """schema downgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('pipeline_data_file', 'state')
    op.drop_column('pipeline_data_file', 'error_message')


def data_upgrades():
    """Add any optional data upgrade migrations here!"""
    pass


def data_downgrades():
    """Add any optional data downgrade migrations here!"""
    pass
