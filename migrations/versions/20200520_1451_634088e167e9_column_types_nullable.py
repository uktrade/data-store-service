"""Column types nullable

Revision ID: 634088e167e9
Revises: dfdba022eb89
Create Date: 2020-05-20 14:51:54.657792

"""
import sqlalchemy as sa
from alembic import context, op
from sqlalchemy.dialects import postgresql
from sqlalchemy.sql.schema import quoted_name  # noqa: F401

from app.db.models import get_schemas

revision = '634088e167e9'
down_revision = 'dfdba022eb89'


def create_schemas():
    conn = op.get_bind()
    for schema_name in get_schemas():
        if not conn.dialect.has_schema(conn, schema_name):
            conn.execute(sa.schema.CreateSchema(schema_name))


def upgrade():
    create_schemas()
    schema_upgrades()
    if context.get_x_argument(as_dictionary=True).get('data', None):
        data_upgrades()


def downgrade():
    if context.get_x_argument(as_dictionary=True).get('data', None):
        data_downgrades()
    schema_downgrades()


def schema_upgrades():
    """schema upgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        'pipeline', 'column_types', existing_type=postgresql.ARRAY(sa.TEXT()), nullable=True
    )
    op.drop_constraint(
        'pipeline_data_file_pipeline_id_fkey', 'pipeline_data_file', type_='foreignkey'
    )
    op.create_foreign_key(
        None,
        'pipeline_data_file',
        'pipeline',
        ['pipeline_id'],
        ['id'],
        referent_schema=quoted_name('public', quote=True),
    )
    # ### end Alembic commands ###


def schema_downgrades():
    """schema downgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'pipeline_data_file', type_='foreignkey')
    op.create_foreign_key(
        'pipeline_data_file_pipeline_id_fkey',
        'pipeline_data_file',
        'pipeline',
        ['pipeline_id'],
        ['id'],
    )
    op.alter_column(
        'pipeline', 'column_types', existing_type=postgresql.ARRAY(sa.TEXT()), nullable=False
    )
    # ### end Alembic commands ###


def data_upgrades():
    """Add any optional data upgrade migrations here!"""
    pass


def data_downgrades():
    """Add any optional data downgrade migrations here!"""
    pass
